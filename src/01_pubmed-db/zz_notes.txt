# still to post 

wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0102.xml.gz

wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0313..0321}.xml.gz (9)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0326..0334}.xml.gz (18)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0339.xml.gz (19)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0359.xml.gz (20)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0830.xml.gz (21)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0845.xml.gz (22)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0868.xml.gz (23)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0887..0890}.xml.gz (27)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0893.xml.gz (28)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0896.xml.gz (29)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0916.xml.gz (30)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0959.xml.gz (31)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0988.xml.gz (32)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0998.xml.gz (33)






wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0151..0171}.xml.gz

 
 


-- testing up to 0500 in other_set
--0958 problem file 
--- 30540375 assession error 
--- 30107787 assession error 



https://careerkarma.com/blog/python-typeerror-object-of-type-nonetype-has-no-len/#:~:text=The%20%E2%80%9CTypeError%3A%20object%20of%20type,sort()%20%2C%20to%20a%20variable.

error -- 0346 -- error 
"""
Traceback (most recent call last):
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 121, in worker
    result = (True, func(*args, **kwds))
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 44, in mapstar
    return list(map(*args))
  File "PubMedParser.py", line 664, in _start_parser
    s = p._parse()
  File "PubMedParser.py", line 259, in _parse
    if len(temp_initials) < 10:
TypeError: object of type 'NoneType' has no len()
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "PubMedParser.py", line 730, in <module>
    run(options.medline_path, options.clean, int(options.start), options.end, int(options.PROCESSES))
  File "PubMedParser.py", line 693, in run
    res = result.get()
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 657, in get
    raise self._value
TypeError: object of type 'NoneType' has no len()


-- not sure what file but likely 365, 341, 323, 292, 286, 220, 244,
xml.etree.ElementTree.ParseError: not well-formed (invalid token): line 20004, column 13

-- could be 
xml.etree.ElementTree.ParseError: mismatched tag: line 16953, column 27


"""
Traceback (most recent call last):
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 121, in worker
    result = (True, func(*args, **kwds))
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 44, in mapstar
    return list(map(*args))
  File "PubMedParser.py", line 667, in _start_parser
    s = p._parse()
  File "PubMedParser.py", line 77, in _parse
    for event, elem in context:
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/xml/etree/ElementTree.py", line 1224, in iterator
    data = source.read(16 * 1024)
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/gzip.py", line 276, in read
    return self._buffer.read(size)
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/_compression.py", line 68, in readinto
    data = self.read(len(byte_view))
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/gzip.py", line 471, in read
    uncompress = self._decompressor.decompress(buf, size)
zlib.error: Error -3 while decompressing data: invalid code lengths set
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "PubMedParser.py", line 733, in <module>
    run(options.medline_path, options.clean, int(options.start), options.end, int(options.PROCESSES))
  File "PubMedParser.py", line 696, in run
    res = result.get()
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 657, in get
    raise self._value
zlib.error: Error -3 while decompressing data: invalid code lengths set