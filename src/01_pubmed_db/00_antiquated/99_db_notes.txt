SELECT xml_file_name, COUNT(fk_pmid)
FROM pubmed_2021.tbl_pmids_in_file
--WHERE xml_file_name ~ 'pubmed21n(0313|0314|0315|0316|0317|0318|0319|0320|0321|0326|0327|0328|0329|0330|0331|0332|0333|0334|0339|0359|0830|0845|0868|0887|0888|0889|0890|0893|0896|0916|0959|0988|0998).xml.gz'
GROUP BY xml_file_name

known errors

0101: line 20004, column 13
0102: line 20258, column 51
0115: line 27432, column 58
0130: invalid distance code
0131: line 21114, column 803
0132: line 19815, column 65
0133: invalid stored block lengths
0247: 
0248: line 22308, column 76
0253: line 17545, column 50
0258: line 15285, column 646
0379: line 16839, column 10
0378: line 16892, column 6
0377: line 16839, column 10
line 16892, column 6

WHY ARE THERE SO MANY ERRORS NOW? 

wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0115.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0146..0147}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0151..0154}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0159..0163}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0167..0169}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0175..0180}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0184..0188}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0197..0202}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0205..0220}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0223..0226}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0229..0231}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0240..0244}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0253..0254}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0258..0261}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0273..0286}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0289..0292}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0296..0323}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0327..0341}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0347..0365}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0371..0378}.xml.gz
---
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0232.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0236..0238}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0247..0248}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0381..0699}.xml.gz
---
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0700..0799}.xml.gz
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0851..1062}.xml.gz


WITH sum_table AS (
SELECT xml_file_name, COUNT(fk_pmid) 
FROM pubmed_2021.tbl_pmids_in_file
--WHERE xml_file_name ~ 'pubmed21n(0313|0314|0315|0316|0317|0319|0320|0321|0327|0328|0329|0330|0331|0332|0333|0334|0339|0359|0830|0845|0868|0887|0888|0889|0890|0893|0896|0916|0959|0988|0998).xml.gz'
GROUP BY xml_file_name)
SELECT *, 
CASE count WHEN 30000 THEN 'done' ELSE 'not finished' END AS progress_chk
FROM sum_table



----

28179507 in 0896 <- must fix 


# still to post 

wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0102.xml.gz

wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0313..0321}.xml.gz (9)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0326..0334}.xml.gz (18)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0339.xml.gz (19)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0359.xml.gz (20)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0830.xml.gz (21)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0845.xml.gz (22)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0868.xml.gz (23)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0887..0890}.xml.gz (27)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0893.xml.gz (28)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0896.xml.gz (29)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0916.xml.gz (30)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0959.xml.gz (31)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0988.xml.gz (32)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0998.xml.gz (33)






wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0151..0171}.xml.gz

 
 


-- testing up to 0500 in other_set
--0958 problem file 
--- 30540375 assession error 
--- 30107787 assession error 



https://careerkarma.com/blog/python-typeerror-object-of-type-nonetype-has-no-len/#:~:text=The%20%E2%80%9CTypeError%3A%20object%20of%20type,sort()%20%2C%20to%20a%20variable.

error -- 0346 -- error 
"""
Traceback (most recent call last):
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 121, in worker
    result = (True, func(*args, **kwds))
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 44, in mapstar
    return list(map(*args))
  File "PubMedParser.py", line 664, in _start_parser
    s = p._parse()
  File "PubMedParser.py", line 259, in _parse
    if len(temp_initials) < 10:
TypeError: object of type 'NoneType' has no len()
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "PubMedParser.py", line 730, in <module>
    run(options.medline_path, options.clean, int(options.start), options.end, int(options.PROCESSES))
  File "PubMedParser.py", line 693, in run
    res = result.get()
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 657, in get
    raise self._value
TypeError: object of type 'NoneType' has no len()


-- not sure what file but likely 365, 341, 323, 292, 286, 220, 244,
xml.etree.ElementTree.ParseError: not well-formed (invalid token): line 20004, column 13

-- could be 
xml.etree.ElementTree.ParseError: mismatched tag: line 16953, column 27


"""
Traceback (most recent call last):
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 121, in worker
    result = (True, func(*args, **kwds))
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 44, in mapstar
    return list(map(*args))
  File "PubMedParser.py", line 667, in _start_parser
    s = p._parse()
  File "PubMedParser.py", line 77, in _parse
    for event, elem in context:
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/xml/etree/ElementTree.py", line 1224, in iterator
    data = source.read(16 * 1024)
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/gzip.py", line 276, in read
    return self._buffer.read(size)
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/_compression.py", line 68, in readinto
    data = self.read(len(byte_view))
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/gzip.py", line 471, in read
    uncompress = self._decompressor.decompress(buf, size)
zlib.error: Error -3 while decompressing data: invalid code lengths set
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "PubMedParser.py", line 733, in <module>
    run(options.medline_path, options.clean, int(options.start), options.end, int(options.PROCESSES))
  File "PubMedParser.py", line 696, in run
    res = result.get()
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 657, in get
    raise self._value
zlib.error: Error -3 while decompressing data: invalid code lengths set


# still to post 

wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0102.xml.gz

wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0313..0321}.xml.gz (9)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0326..0334}.xml.gz (18)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0339.xml.gz (19)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0359.xml.gz (20)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0830.xml.gz (21)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0845.xml.gz (22)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0868.xml.gz (23)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0887..0890}.xml.gz (27)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0893.xml.gz (28)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0896.xml.gz (29)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0916.xml.gz (30)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0959.xml.gz (31)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0988.xml.gz (32)
wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n0998.xml.gz (33)






wget ftp://ftp.ncbi.nlm.nih.gov/pubmed/baseline/pubmed21n{0151..0171}.xml.gz

 
 


-- testing up to 0500 in other_set
--0958 problem file 
--- 30540375 assession error 
--- 30107787 assession error 



https://careerkarma.com/blog/python-typeerror-object-of-type-nonetype-has-no-len/#:~:text=The%20%E2%80%9CTypeError%3A%20object%20of%20type,sort()%20%2C%20to%20a%20variable.

error -- 0346 -- error 
"""
Traceback (most recent call last):
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 121, in worker
    result = (True, func(*args, **kwds))
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 44, in mapstar
    return list(map(*args))
  File "PubMedParser.py", line 664, in _start_parser
    s = p._parse()
  File "PubMedParser.py", line 259, in _parse
    if len(temp_initials) < 10:
TypeError: object of type 'NoneType' has no len()
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "PubMedParser.py", line 730, in <module>
    run(options.medline_path, options.clean, int(options.start), options.end, int(options.PROCESSES))
  File "PubMedParser.py", line 693, in run
    res = result.get()
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 657, in get
    raise self._value
TypeError: object of type 'NoneType' has no len()


-- not sure what file but likely 365, 341, 323, 292, 286, 220, 244,
xml.etree.ElementTree.ParseError: not well-formed (invalid token): line 20004, column 13

-- could be 
xml.etree.ElementTree.ParseError: mismatched tag: line 16953, column 27


"""
Traceback (most recent call last):
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 121, in worker
    result = (True, func(*args, **kwds))
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 44, in mapstar
    return list(map(*args))
  File "PubMedParser.py", line 667, in _start_parser
    s = p._parse()
  File "PubMedParser.py", line 77, in _parse
    for event, elem in context:
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/xml/etree/ElementTree.py", line 1224, in iterator
    data = source.read(16 * 1024)
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/gzip.py", line 276, in read
    return self._buffer.read(size)
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/_compression.py", line 68, in readinto
    data = self.read(len(byte_view))
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/gzip.py", line 471, in read
    uncompress = self._decompressor.decompress(buf, size)
zlib.error: Error -3 while decompressing data: invalid code lengths set
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "PubMedParser.py", line 733, in <module>
    run(options.medline_path, options.clean, int(options.start), options.end, int(options.PROCESSES))
  File "PubMedParser.py", line 696, in run
    res = result.get()
  File "/apps/software/standard/compiler/gcc/9.2.0/jupyter_conda/2019.10-py3.7/lib/python3.7/multiprocessing/pool.py", line 657, in get
    raise self._value
zlib.error: Error -3 while decompressing data: invalid code lengths set